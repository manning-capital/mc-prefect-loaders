apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "deploy-prefect.fullname" . }}
  labels:
    {{- include "deploy-prefect.labels" . | nindent 4 }}
spec:
  # Prevent multiple jobs from running simultaneously
  parallelism: {{ .Values.job.parallelism }}
  # Allow only one job to be created
  completions: {{ .Values.job.completions }}
  # Set a deadline for the job to complete
  activeDeadlineSeconds: {{ .Values.job.activeDeadlineSeconds }}
  # Clean up completed jobs automatically
  ttlSecondsAfterFinished: {{ .Values.job.ttlSecondsAfterFinished }}
  # Restart policy for the job
  backoffLimit: {{ .Values.job.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "deploy-prefect.selectorLabels" . | nindent 8 }}
    spec:
      # Restart policy for the pod
      restartPolicy: Never
      # Container configuration
      containers:
      - name: {{ .Chart.Name }}
        # Image configuration
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # Command to run in the container
        command: ["/bin/bash"]
        args:
        - -c
        - |
          echo "Starting Deploy Code job..."
          
          # First, run the variables python script to set environment variables
          echo "Setting variables for Prefect API URL and GitHub branch..."
          python data/variables_base.py
          if [ $? -ne 0 ]; then
            echo "✗ Failed to set variables"
            exit 1
          fi
          echo "✓ Variables set successfully"
          
          # Then, run the secrets python script to set environment variables
          echo "Setting secrets for Prefect API key and GitHub token..."
          python data/secrets_base.py
          if [ $? -ne 0 ]; then
            echo "✗ Failed to set secrets"
            exit 1
          fi
          echo "✓ Secrets set successfully"
          
          # Finally, find and run all deploy scripts recursively
          echo "Searching for deploy scripts recursively in src directory..."
          find src -type f -name "*_deploy.py" -print0 | while IFS= read -r -d '' file; do
            echo "Running deploy script: $file"
            python "$file"
            if [ $? -eq 0 ]; then
              echo "✓ Successfully executed: $file"
            else
              echo "✗ Failed to execute: $file"
              exit 1
            fi
          done
          
          echo "All deploy scripts completed successfully"
        # Environment variables
        env:
        - name: PREFECT_API_URL
          value: "{{ .Values.config.prefectApiUrl }}"
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        # Resource limits and requests
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: false
        # Volume mounts if needed
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /root/.cache
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
